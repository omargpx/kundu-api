plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.sonarqube" version "4.2.1.3168"
}

group = 'com.citse'
version = '1.0.0-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.0.5'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.agora:authentication:2.0.0.2-ci-test'
	implementation 'commons-codec:commons-codec'
	implementation 'com.corundumstudio.socketio:netty-socketio:2.0.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

sonar {
	properties {
		property "sonar.projectKey", "kunduApi"
		property "sonar.organization", "kunduApi "
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.token", "sqp_10aec0f12dc77a9fcafdf85e3b226a18cee8edec"
	}
}


apply plugin: "org.sonarqube"

tasks.named('test') {
	useJUnitPlatform()
}
